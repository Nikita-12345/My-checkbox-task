{"version":3,"sources":["Redux/Reducers/index.js","Redux/Store/store.js","Redux/Actions/constants.js","Redux/Actions/index.js","Component/CheckListContainer.jsx","Component/ChecklistDescription.jsx","Component/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","store","createStore","state","action","type","data","label","payload","checked","value","labelHeading","flagValue","push","map","filter","applyMiddleware","thunk","removeItemList","mapDispatchToProps","addItemList","connect","props","useState","Aasiyachecked","setAasiyaChecked","Luvleenchecked","setLuvleenChecked","Reychecked","setReyChecked","Caylachecked","setCaylaChecked","Deveedaaschecked","setDeveedaasChecked","Obaseychecked","setObaseyChecked","Xeniechecked","setXenieChecked","Ezequielchecked","setEzequielChecked","Aaronchecked","setAaronChecked","Jelenachecked","setJelenaChecked","useEffect","console","log","length","i","className","onChange","noValueSelected","setnoValueSelected","index","key","style","maxWidth","readOnly","disabled","onClick","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3134ed0d.chunk.js","sourcesContent":["import {ADD_LIST, REMOVEFROM_LIST} from '../Actions/constants';\r\n\r\nconst initialState = []\r\n\r\n\r\nexport const filteredListReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_LIST :\r\n            let finalErr = {}\r\n            let data = {label : action.payload.data, checked : action.payload.value, labelHeading: action.payload.labelHeading, flagValue: action.payload.flagValue};\r\n            state.push(data);\r\n            finalErr = state.map(state=> state);\r\n            return finalErr;\r\n\r\n        case REMOVEFROM_LIST :\r\n            state = state.filter(state=>(state.label !== action.payload.data))\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\n","import {createStore, applyMiddleware} from 'redux';\r\n// import { rootReducer } from '../Reducers/index';\r\nimport { filteredListReducer } from '../Reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(filteredListReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","export const ADD_LIST = 'ADD_LIST';\r\nexport const REMOVEFROM_LIST = 'REMOVEFROM_LIST';\r\nexport const UNCHECKEDBOX = 'UNCHECKEDBOX';\r\n\r\n","import {ADD_LIST, REMOVEFROM_LIST} from './constants';\r\n\r\nexport const addItemList = (labelHeading,data,value, flagValue) =>{\r\n    return {\r\n        type : ADD_LIST,\r\n        payload : {labelHeading, data, value, flagValue}\r\n    }\r\n}\r\n\r\nexport const removeItemList = (labelHeading,data,value, flagValue) =>{\r\n    return {\r\n        type : REMOVEFROM_LIST,\r\n        payload : {labelHeading, data, value, flagValue}\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItemList, removeItemList } from '../Redux/Actions/index';\r\n\r\n\r\nfunction CheckListContainer(props) {\r\n    const [Aasiyachecked, setAasiyaChecked] = useState(false);\r\n    const [Luvleenchecked, setLuvleenChecked] = useState(false);\r\n    const [Reychecked, setReyChecked] = useState(false);\r\n    const [Caylachecked, setCaylaChecked] = useState(false);\r\n    const [Deveedaaschecked, setDeveedaasChecked] = useState(false);\r\n    const [Obaseychecked, setObaseyChecked] = useState(false);\r\n    const [Xeniechecked, setXenieChecked] = useState(false);\r\n    const [Ezequielchecked, setEzequielChecked] = useState(false);\r\n    const [Aaronchecked, setAaronChecked] = useState(false);\r\n    const [Jelenachecked, setJelenaChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('props', props.state);\r\n        if (props.state.length === 0) {\r\n            setAasiyaChecked(false);\r\n            setLuvleenChecked(false);\r\n            setReyChecked(false);\r\n            setCaylaChecked(false);\r\n            setDeveedaasChecked(false);\r\n            setObaseyChecked(false);\r\n            setXenieChecked(false);\r\n            setEzequielChecked(false);\r\n            setAaronChecked(false);\r\n            setJelenaChecked(false);\r\n        }\r\n        else {\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Aasiyachecked\") {\r\n                    setAasiyaChecked(true);\r\n                    break;\r\n                } else {\r\n                    setAasiyaChecked(false);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Luvleenchecked\") {\r\n                    setLuvleenChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setLuvleenChecked(false);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Reychecked\") {\r\n                    setReyChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setReyChecked(false);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Caylachecked\") {\r\n                    setCaylaChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setCaylaChecked(false);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Deveedaaschecked\") {\r\n                    setDeveedaasChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setDeveedaasChecked(false);\r\n                }\r\n            }\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Obaseychecked\") {\r\n                    setObaseyChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setObaseyChecked(false);\r\n                }\r\n            }\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Xeniechecked\") {\r\n                    setXenieChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setXenieChecked(false);\r\n                }\r\n            }\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Ezequielchecked\") {\r\n                    setEzequielChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setEzequielChecked(false);\r\n                }\r\n            }\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Aaronchecked\") {\r\n                    setAaronChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setAaronChecked(false);\r\n                }\r\n            }\r\n            for (let i = 0; i < props.state.length; i++) {\r\n                if (props.state[i].flagValue === \"Jelenachecked\") {\r\n                    setJelenaChecked(true);\r\n                    break;\r\n                }\r\n                else {\r\n                    setJelenaChecked(false);\r\n                }\r\n            }\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <h4>Portugal</h4>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Aasiyachecked} onChange={() => { setAasiyaChecked(!Aasiyachecked); !Aasiyachecked ? props.addItemList('Portugal', 'Aasiya Jayavant', true, 'Aasiyachecked') : props.removeItemList('Portugal', 'Aasiya Jayavant', false, 'Aasiyachecked') }} />\r\n                Aasiya Jayavant\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Luvleenchecked} onChange={() => { setLuvleenChecked(!Luvleenchecked); !Luvleenchecked ? props.addItemList('Portugal', 'Luvleen Lawrence', true, 'Luvleenchecked') : props.removeItemList('Portugal', 'Luvleen Lawrence', false, 'Luvleenchecked') }} />\r\n                Luvleen Lawrence\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Reychecked} onChange={() => { setReyChecked(!Reychecked); !Reychecked ? props.addItemList('Portugal', 'Rey Mibourne', true, 'Reychecked') : props.removeItemList('Portugal', 'Rey Mibourne', false, 'Reychecked') }} />\r\n                Rey Mibourne\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Caylachecked} onChange={() => { setCaylaChecked(!Caylachecked); !Caylachecked ? props.addItemList('Portugal', 'Cayla Brister', true, 'Caylachecked') : props.removeItemList('Portugal', 'Cayla Brister', false, 'Caylachecked') }} />\r\n                Cayla Brister\r\n            </label>\r\n            </div>\r\n\r\n            <h4>Nicaragua</h4>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Deveedaaschecked} onChange={() => { setDeveedaasChecked(!Deveedaaschecked); !Deveedaaschecked ? props.addItemList('Nicaragua', 'Deveedaas Nandi', true, 'Deveedaaschecked') : props.removeItemList('Nicaragua', 'Deveedaas Nandi', false, 'Deveedaaschecked') }} />\r\n                Deveedaas Nandi\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Obaseychecked} onChange={() => { setObaseyChecked(!Obaseychecked); !Obaseychecked ? props.addItemList('Nicaragua', 'Obasey Chidy', true, 'Obaseychecked') : props.removeItemList('Nicaragua', 'Obasey Chidy', false, 'Obaseychecked') }} />\r\n                Obasey Chidy\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Xeniechecked} onChange={() => { setXenieChecked(!Xeniechecked); !Xeniechecked ? props.addItemList('Nicaragua', 'Xenie Dolezelova', true, 'Xeniechecked') : props.removeItemList('Nicaragua', 'Xenie Dolezelova', false, 'Xeniechecked') }} />\r\n                Xenie Dolezelova\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Ezequielchecked} onChange={() => { setEzequielChecked(!Ezequielchecked); !Ezequielchecked ? props.addItemList('Nicaragua', 'Ezequiel Dengra', true, 'Ezequielchecked') : props.removeItemList('Nicaragua', 'Ezequiel Dengra', false, 'Ezequielchecked') }} />\r\n                Ezequiel Dengra\r\n            </label>\r\n            </div>\r\n\r\n            <h4>Marshall Islands</h4>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Aaronchecked} onChange={() => { setAaronChecked(!Aaronchecked); !Aaronchecked ? props.addItemList('Marshall Islands', 'Aaron Almaraz', true, 'Aaronchecked') : props.removeItemList('Marshall Islands', 'Aaron Almaraz', false, 'Aaronchecked') }} />\r\n                Aaron Almaraz\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input className=\"inputALign\" type=\"checkbox\" checked={Jelenachecked} onChange={() => { setJelenaChecked(!Jelenachecked); !Jelenachecked ? props.addItemList('Marshall Islands', 'Jelenachecked', true, 'Jelenachecked') : props.removeItemList('Marshall Islands', 'Jelena Denisova', false, 'Jelenachecked') }} />\r\n                Jelena Denisova\r\n            </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    addItemList,\r\n    removeItemList\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckListContainer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeItemList } from '../Redux/Actions/index';\r\n\r\n\r\nfunction ChecklistDescription(props) {\r\n    \r\n    const [noValueSelected, setnoValueSelected] = useState(false)\r\n    useEffect(() => {\r\n        if(props.state.length === 0){           \r\n            setnoValueSelected(true);\r\n        }else{\r\n            setnoValueSelected(false);\r\n        }\r\n    }, [props])\r\n    return (\r\n        <div>    \r\n            {noValueSelected && <p className=\"textAlignment\">No Value Selected</p>}   \r\n            {props.state.map((data, index) => (\r\n                <div key={index}>\r\n                        <div style={{maxWidth:\"400px\"}}>\r\n                            <div className=\"input-icons\"> \r\n                            <div className=\"input-container\">                                \r\n                                <input className=\"input-field\" type=\"text\" value={data.label} readOnly disabled  />\r\n                                <i className=\"fa fa-times icon\" onClick={()=>props.removeItemList(data.labelHeading,data.label,false,data.flagValue)}></i>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeItemList\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChecklistDescription);\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"bg-success\">\r\n            <span className=\"alignLeft\">LOGO</span>\r\n            <span className=\"alignRight\">\r\n            <button className=\"btn\">Home</button>\r\n            <button className=\"btn\">My Portfolio</button>\r\n            <button className=\"btn\">Clients</button>\r\n            <button className=\"btn\">Get in touch</button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store/store';\nimport CheckListContainer from './Component/CheckListContainer';\nimport ChecklistDescription from './Component/ChecklistDescription';\nimport Header from './Component/Header';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"containe\">        \n      <div className=\"child setBackGroung\">\n        <Header />\n        <div className=\"row mx-4 my-4\">\n            <div className=\"col-md-2\"></div>\n            <div className=\"col-md-3 bg-light CheckListContainerDesign\"><CheckListContainer/></div>\n            <div className=\"col-md-1\"></div>\n            <div className=\"col-md-4 bg-light ChecklistDescriptionDesign pt-2\"><ChecklistDescription/></div>\n            <div className=\"col-md-2\"></div>\n            </div>\n        </div>              \n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}